

@model TodoIndexVM

    <div class="row">
        <partial name="_Notification" />
        <div class="col-md-2">

        <form asp-controller="Todo" asp-action="Filters" method="post">
            <div class="mb-3">
                <label class="form-label">Category</label>
                <select name="filter" class="form-select" asp-items="@Model.Categories">
                    <option value="all">All</option>
                    
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Due</label>
                <select name="filter" class="form-select" asp-items="@Model.DueFilterValues">
                    <option value="all">All</option>
                    
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Status</label>
                <select name="filter" class="form-select" asp-items="@Model.Statues">
                    <option value="all">All</option>
                    
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
            <a asp-action="Index" asp-route-id="" class="btn btn-primary">Clear</a>
        </form>

        </div>
        <div class="col-md-10">
        <form asp-action="MarkComplete" method="post" asp-route-id="@ViewBag.Filters.Filterstring">
            
            <div id="todoTableContainer">
                <table class="table table-bordered table-striped mt-2">
                    <thead>
                        <tr>
                            <th>Description</th>
                            <th>Category</th>
                            <th>Due Date</th>
                            <th>Status</th>
                            <th class="w-25"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Todo task in Model.Todos)
                        {
                            string overdue = task.OverDue ? "bg-warning" : "";
                            <tr>
                                <td>@task.Description</td>
                                <td>@task.Category.CategoryName</td>
                                <td class="@overdue">@task.DueDate?.ToShortDateString()</td>
                                <td class="@overdue">@task.Status.StatusName</td>
                                <td>
                                    @if (task.StatusId == "open")
                                    {

                                        <button type="submit" class="btn btn-success btn-sm" name="@nameof(Todo.Id)" value="@task.Id">Mark Completed</button>
                                        <a class="btn btn-primary btn-sm" asp-action="Upsert" asp-route-id="@task.Id">Update</a>
                                        <a class="btn btn-danger btn-sm" onclick="Delete('/todo/delete/@task.Id')">Delete</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
                <nav>
                    <ul class="pagination">
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
                
            </form>

         <form id="deleteForm" asp-action="DeleteComplete" method="post" asp-route-id="@ViewBag.Filters.Filterstring">
            <a  asp-action="Upsert" class="btn btn-primary">Add new task</a>
            <button type="submit"  class="btn btn-danger">Delete completed tasks</button>
        </form> 
        
        </div>
    </div>
    <script>
    function Delete(url) {
        event.preventDefault(); // Linkin otomatik olarak çalışmasını engelle
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                console.log("urllll:" + url);
                $.ajax({
                    type: "DELETE",
                    url: url,
                    success: function (response) {
                        Swal.fire({
                            title: "Deleted!",
                            text: "Delete successfull.",
                            icon: "success"
                        }).then(()=>{
                            
                            $.get("/todo/index", function (data) {
                                $("#todoTableContainer").html($(data).find("#todoTableContainer").html());
                            });
                        })
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: "Error!",
                            text: "An error occurred while deleting the item.",
                            icon: "error"
                        });
                    }
                });
            }
        });
    }


    </script>